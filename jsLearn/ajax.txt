背景：
以前做数据交互的时候，大家通常选择使用表单的方式提交数据，表单提交的方式
从当前页面跳转到action页面，所以用户体验极其糟糕，所以需要想办法让当前
页面，不跳转的同时把数据传送过去，把服务器的响应内容拿过来。
总结就是AJAX在不刷新当前页面，把某些数据传递个服务器，把某些数据从服务器拿回客户端。
注意：AJAX必须依赖www服务执行。

<1> 什么是AJAX
Asynchronous Javascript And XML(异步JavaScript和XML)
交互：这里是指客户端和服务器的数据是可以相互传递和使用的。
XML：一种类似于HTML的标记语言，可扩展标记语言(Extensible Markup Language).

<2> 基础使用
(1) 创建对象
var xhr = new XMLHttpRequest();
兼容模式：var xhr = new XMLHttpRequest()? new XMLHttpRequest : new ActiveXObject("Msxml2.XMLHTTP");

(2) 添加属性
xhr.open('get',url,true);
第1个参数指请求的发送方式，值为get或post。
第2个参数指请求的url路径。
第3个参数指请求是异步还是同步，如果写true表示异步（默认true），写false表示同步。

(3) 发送请求
xhr.send();
备注：
如果是get方式发送请求，send()命令中不用写任何参数
传递的数据可以写在url中，服务器用$_GET[“参数名”]接收。

如果是post方式发送请求，需要设置请求头才能正确把数据传递给后端页面。
xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
xhr.send(“数据名1=数据值&数据名2=数据值”)，服务器用$_POST[“参数名”]接收。

(4) 监听响应数据
异步时：
	
需要通过 onreadystatechange 监听
例如  xhr.onreadystatechange = function(){}	
指如果xhr对象的预备好的状态发生了变化时，触发函数。
	
需要通过 onreadystatechange 监听
xhr.onreadystatechange = function(){
	if(xhr.readyState == 4 && xhr.status == 200){
		alert(xhr.responseText);
		}
	}
(5) 同步请求
同步时：
不需要监听，可以直接获取响应   xhr.responseText

(6) 响应参数介绍
onreadystatechange指本次ajax请求的状态发生改变时所触发的事件
readyState 指请求状态
0：请求未初始化（还没有调用 open()）。
1：请求已经建立，但是还没有发送（还没有调用 send()）。
2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。
3：请求在处理中；通常响应中已有部分数据可用了，但是服务器还没有完成响应的生成。
4：响应已完成；您可以获取并使用服务器的响应了。

status 指http状态（常用的http状态码，稍微了解下即可）
200：ok，页面正确打开，并得到完整的响应内容。
301：被请求的资源已永久移动到新位置
302：请求的资源临时从不同的 URI响应请求
304：缓存
404：页面不存在。
500：常指后端代码发生错误
503：由于临时的服务器维护或者过载，服务器当前无法处理请求。
 
responseText指接收到的响应结果 



1 标准字符串 var str = '{"a":1,"b":2}';
eval 和JSON.parse 都可以转换 。推荐JSON
2 不是标准字符串 var str1 = "{'a':1,'b':2}"
只能用eval eval('('+ str1 +')')
